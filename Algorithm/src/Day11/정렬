정렬: 이름, 학번, 키 등 핵심 항목(Key)의 대소 관계에 따라 데이터 집합을 일정한 순서로 줄지어 늘어서도록 바꾸는 작업
	알고리즘을 이용해 데이터를 정렬하면 검색을 더 쉽게 할 수 있다.
	키 값이 작은 데이터가 앞에 있고 그 값이 증가하면 오름차순(ascending order)
	키 값이 큰 데이터가 앞에 있고 그 값이 감소하면 내림차순(descending order)
	
1. 내부 정렬: 정렬 알고리즘으로 하나의 배열에서 작업할 수 있을 경우 사용
2. 외부 정렬: 정렬할 데이터가 너무 많아서 하나의 배열에 저장할 수 없는 경우 사용

정렬 알고리즘의 핵심 요소: 교환, 선택, 삽입이며 대부분의 정렬 알고리즘은 이 세가지 요소를 응용한 것이다.

1. 버블 정렬: 이웃한 두 요소의 대소 관계를 비교하여 교환을 반복하나.
	배열 6, 4, 3, 7, 1, 9, 8
	먼저, 맨 끝의 두 요소를 비교하여 오름차순으로 정렬한다.
	배열 6, 4, 3, 7, 1, 8, 9 -> 마지막 9하고 8 비교. 9와 8의 자리 바꿈
	배열 6, 4, 3, 7, 1, 8, 9 -> 1, 8 값 비교. 1이 작으니 자리 바꿈 없음
	배열 6, 4, 3, 1, 7, 8, 9 -> 7, 1 값 비교, 1이 작으니 자리 바꿈
	배열 6, 4, 1, 3, 7, 8, 9 -> 3, 1 값 비교, 1이 작으니 자리 바꿈
	배열 6, 1, 4, 3, 7, 8, 9 -> 4, 1 값 비교, 1이 작으니 자리 바꿈
	배열 1, 6, 4, 3, 7, 8, 9 -> 6, 1 값 비교, 1이 작으니 자리 바꿈
	배열 1, 6, 4, 3, 7, 8, 9 (n-1)회차 완료
	-------------------------------------------------------------
	배열 1, 6, 4, 3, 7, 8, 9 -> 8, 9 비교, 변동 없음
	배열 1, 6, 4, 3, 7, 8, 9 -> 7, 8 비교, 변동 없음
	배열 1, 6, 4, 3, 7, 8, 9 -> 3, 7 비교, 변동 없음
	배열 1, 6, 3, 4, 7, 8, 9 -> 4, 3 비교, 3이 작으니 자리 바꿈
	배열 1, 3, 6, 4, 7, 8, 9 -> 6, 3 비교, 3이 작으니 자리 바꿈
	배열 1, 3, 6, 4, 7, 8, 9 -> 1, 3 비교, 3이 작으니 자리 바꿈
	배열 1, 3, 6, 4, 7, 8, 9 (n-2)회차 완료
	-------------------------------------------------------------
	배열 1, 3, 6, 4, 7, 8, 9 -> 8, 9 비교, 변동 없음
	배열 1, 3, 6, 4, 7, 8, 9 -> 7, 8 비교, 변동 없음
	배열 1, 3, 6, 4, 7, 8, 9 -> 4, 7 비교, 변동 없음
	배열 1, 3, 4, 6, 7, 8, 9 -> 6, 4 비교, 4가 작으니 자리 바꿈
	배열 1, 3, 4, 6, 7, 8, 9 -> 3, 4 비교, 변동 없음
	배열 1, 3, 4, 6, 7, 8, 9 -> 1, 3 비교, 변동 없음
	배열 1, 3, 4, 6, 7, 8, 9 (n-3) 회차 완료
	